{"version":3,"sources":["../../server/routes/api.js"],"names":["router","Router","get","logout","post","borrow","put","return","inventory","add","update","retrieveAll","retrieve","use","req","res","next","signup","login"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEAD,OAAOE,GAAP,CAAW,eAAX,yBAAwC,eAAgBC,MAAxD;;AAEA;AACAH,OAAOI,IAAP,CAAY,sBAAZ,yBAAgD,eAAgBC,MAAhE;;AAEA;AACAL,OAAOM,GAAP,CAAW,sBAAX,yBAA+C,eAAgBC,MAA/D;;AAEA;AACAP,OAAOE,GAAP,CAAW,sBAAX,yBAA+C,eAAgBM,SAA/D;;AAEA;AACAR,OAAOI,IAAP,CAAY,QAAZ,yBAAkC,eAAgBK,GAAlD;;AAEA;AACAT,OAAOM,GAAP,CAAW,gBAAX,yBAAyC,eAAgBI,MAAzD;;AAEA;AACAV,OAAOE,GAAP,CAAW,QAAX,yBAAiC,eAAgBS,WAAjD;;AAEA;AACAX,OAAOE,GAAP,CAAW,gBAAX,yBAAyC,eAAgBU,QAAzD;;AAEA;;;AAGAZ,OAAOa,GAAP,CAAW,GAAX,0BAA6B,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7CA;AACH,CAFD;;AAIA;AACAhB,OAAOI,IAAP,CAAY,eAAZ,EAA6B,eAAgBa,MAA7C;;AAEA;AACAjB,OAAOI,IAAP,CAAY,eAAZ,EAA6B,eAAgBc,KAA7C;;kBAEelB,M","file":"api.js","sourcesContent":["import express from 'express';\r\n\r\nimport BooksController from '../controllers/book';\r\nimport UsersController from '../controllers/user';\r\nimport { isLoggedIn, notLoggedIn } from '../helpers/user_auth';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get('/users/logout', isLoggedIn, UsersController.logout);\r\n\r\n/* Borrow book */\r\nrouter.post('/users/:userId/books', isLoggedIn, BooksController.borrow);\r\n\r\n/* PUT allow user to return book */\r\nrouter.put('/users/:userId/books', isLoggedIn, BooksController.return);\r\n\r\n/* GET user borrowed book */\r\nrouter.get('/users/:userId/books', isLoggedIn, BooksController.inventory);\r\n\r\n/* POST add book */\r\nrouter.post('/books', isLoggedIn, BooksController.add);\r\n\r\n/* PUT modify book */\r\nrouter.put('/books/:bookId', isLoggedIn, BooksController.update);\r\n\r\n/* GET retrieve all books */\r\nrouter.get('/books', isLoggedIn, BooksController.retrieveAll);\r\n\r\n/* GET retrieve single book */\r\nrouter.get('/books/:bookId', isLoggedIn, BooksController.retrieve);\r\n\r\n/**\r\n * Access Restriction\r\n */\r\nrouter.use('/', notLoggedIn, (req, res, next) => {\r\n    next();\r\n});\r\n\r\n/* POST user signup */\r\nrouter.post('/users/signup', UsersController.signup);\r\n\r\n/* POST user signin */\r\nrouter.post('/users/signin', UsersController.login);\r\n\r\nexport default router;\r\n"]}