{"version":3,"sources":["../../src/models/index.js"],"names":["fs","require","path","Sequelize","basename","module","filename","env","process","NODE_ENV","config","db","sequelize","use_env_variable","database","username","password","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate"],"mappings":";;;;;AAAA;AACA;AACA;AACA;;AAEA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,YAAYF,QAAQ,WAAR,CAAlB;AACA,IAAMG,WAAWF,KAAKE,QAAL,CAAcC,OAAOC,QAArB,CAAjB;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,SAAST,QAAQ,iCAAR,EAA2CM,GAA3C,CAAf;AACA,IAAMI,KAAK,EAAX;;AAEA,IAAIC,kBAAJ;AACA,IAAIF,OAAOG,gBAAX,EAA6B;AACzBD,gBAAY,IAAIT,SAAJ,CAAcK,QAAQD,GAAR,CAAYG,OAAOG,gBAAnB,CAAd,CAAZ;AACH,CAFD,MAEO;AACHD,gBAAY,IAAIT,SAAJ,CAAcO,OAAOI,QAArB,EAA+BJ,OAAOK,QAAtC,EAAgDL,OAAOM,QAAvD,EAAiEN,MAAjE,CAAZ;AACH;;AAEDV,GACKiB,WADL,CACiBC,SADjB,EAEKC,MAFL,CAEY,UAACC,IAAD,EAAU;AACd,WAAQA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAAShB,QAAvC,IAAqDgB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACH,CAJL,EAKKC,OALL,CAKa,UAACH,IAAD,EAAU;AACf,QAAMI,QAAQZ,UAAU,QAAV,EAAoBV,KAAKuB,IAAL,CAAUP,SAAV,EAAqBE,IAArB,CAApB,CAAd;AACAT,OAAGa,MAAME,IAAT,IAAiBF,KAAjB;AACH,CARL;;AAUAG,OAAOC,IAAP,CAAYjB,EAAZ,EAAgBY,OAAhB,CAAwB,UAACM,SAAD,EAAe;AACnC,QAAIlB,GAAGkB,SAAH,EAAcC,SAAlB,EAA6B;AACzBnB,WAAGkB,SAAH,EAAcC,SAAd,CAAwBnB,EAAxB;AACH;AACJ,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGR,SAAH,GAAeA,SAAf;;kBAEeQ,E","file":"index.js","sourcesContent":["/* eslint-disable */\n// import fs from 'fs';\n// import path from 'path';\n// import Sequelize from 'sequelize';\n\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst basename = path.basename(module.filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require('../../src/db/config/config.json')[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n    sequelize = new Sequelize(process.env[config.use_env_variable]);\n} else {\n    sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n    .readdirSync(__dirname)\n    .filter((file) => {\n        return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n    })\n    .forEach((file) => {\n        const model = sequelize['import'](path.join(__dirname, file));\n        db[model.name] = model;\n    });\n\nObject.keys(db).forEach((modelName) => {\n    if (db[modelName].associate) {\n        db[modelName].associate(db);\n    }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nexport default db;\n"]}